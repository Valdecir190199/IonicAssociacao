{"version":3,"sources":["./src/app/curso/curso-listar/curso-listar.page.html","./src/app/curso/curso-listar/curso-listar.module.ts","./src/app/curso/curso-listar/curso-listar.page.scss","./src/app/curso/curso-listar/curso-listar.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,2OAA2O,cAAc,iCAAiC,aAAa,smB;;;;;;;;;;;;;;;;;;;;;;ACA9P;AACM;AACF;AACU;AAEV;AAES;AAEtD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAe;KAC3B;CACF,CAAC;AAWF;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QATjC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,kEAAe,CAAC;SAChC,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBlC,+DAA+D,+J;;;;;;;;;;;;;;;;;;;ACAb;AAGb;AAEwB;AAS7D;IAME,yBAAoB,IAAwB;QAAxB,SAAI,GAAJ,IAAI,CAAoB;QAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,OAAO,CAAC,CAAC,eAAe,EAAE,CAAC,IAAI,CACvE,0DAAG,CAAE,eAAK,IAAI,YAAK,CAAC,GAAG,CAAE,eAAK,IAAG,QAAC,iDAAC,GAAG,EAAC,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,EAAhD,CAAgD,CAAC,EAApE,CAAoE,CAAC,CACpF,CAAC;IACH,CAAC;IAEF,iCAAO,GAAP,UAAQ,GAAW,EAAE,KAAY;QAC/B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;IAC9C,CAAC;IAED,kCAAQ,GAAR;IACA,CAAC;IAED,gCAAM,GAAN;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,OAAO,EAAE,aAAG,IAAI,UAAG,CAAC,YAAY,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAC,eAAe,EAAE,CAAC,IAAI,CACvG,0DAAG,CAAC,eAAK,IAAI,YAAK,CAAC,GAAG,CAAC,eAAK,IAAI,QAAC,iDAAE,GAAG,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,IAAK,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAG,EAApD,CAAoD,CAAC,EAAxE,CAAwE,CAAC,CACvF,CAAC;IACJ,CAAC;;gBAlBwB,0EAAmB;;IANjC,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,kKAAuC;;SAExC,CAAC;+EAOyB,0EAAmB;OANjC,eAAe,CA0B3B;IAAD,sBAAC;CAAA;AA1B2B","file":"curso-curso-listar-curso-listar-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Lista de Cursos</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let curso of listaCursos$ | async\\\">\\n      <ion-label>{{ curso.nome }}</ion-label>\\n      <ion-label>{{ curso.ano }}</ion-label>\\n      <ion-button *ngIf=\\\"(user_id | async) == curso.user_id\\\" expand=\\\"full\\\" shape=\\\"round\\\" color=\\\"danger\\\"\\n        (click)=\\\"excluir(curso.key, curso)\\\">Excluir</ion-button>\\n\\n    </ion-item>\\n  <ion-item>\\n    <ion-input [(ngModel)]=\\\"buscarCurso\\\"></ion-input>\\n    <ion-button expand=\\\"full\\\" shape=\\\"round\\\" color=\\\"danger\\\" (click)=\\\"buscar()\\\">busca</ion-button>\\n  </ion-item>\\n  </ion-list>\\n  \\n  <ion-button expand=\\\"full\\\" shape=\\\"round\\\" href=\\\"salvar-curso\\\"> Novo </ion-button>\\n  <ion-button expand=\\\"full\\\" shape=\\\"round\\\" href=\\\"pagina\\\">Voltar</ion-button>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CursoListarPage } from './curso-listar.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CursoListarPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CursoListarPage]\n})\nexport class CursoListarPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1cnNvL2N1cnNvLWxpc3Rhci9jdXJzby1saXN0YXIucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { map } from 'rxjs/operators';\nimport { Curso } from '../entidade/curso';\nimport { AngularFireDatabase } from '@angular/fire/database';\n\n\n\n@Component({\n  selector: 'app-curso-listar',\n  templateUrl: './curso-listar.page.html',\n  styleUrls: ['./curso-listar.page.scss'],\n})\nexport class CursoListarPage implements OnInit {\n\n  listaCursos$: Observable<Curso[]>;\n\n  buscarCurso: string;\n\n  constructor(private fire:AngularFireDatabase) {\n    this.listaCursos$ = this.fire.list<Curso>('curso').snapshotChanges().pipe(\n      map (lista => lista.map (linha=> ({key:linha.payload.key,...linha.payload.val()})))\n    );\n   }\n\n  excluir(key: string, curso: Curso) {\n    this.fire.object('curso/' + key).remove();\n    this.fire.object('message/' + key).remove();\n  }\n\n  ngOnInit() {\n  }\n\n  buscar(){    \n    this.listaCursos$ = this.fire.list<Curso>('curso', ref => ref.orderByChild(\"ano\")).snapshotChanges().pipe(\n      map(lista => lista.map(linha => ({ key: linha.payload.key, ...linha.payload.val() })))\n    );\n  }\n\n}\n"],"sourceRoot":""}